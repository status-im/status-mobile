// We need release builds for users who want to test apps, diawi removes old builds and limits downloads, hence the need for Artifactory.
// To see env: echo sh(returnStdout: true, script: 'env')

env.LANG="en_US.UTF-8"
env.LANGUAGE="en_US.UTF-8"
env.LC_ALL="en_US.UTF-8"

timeout(90) {
    node ('macos'){
        def apkUrl = ''
        def ipaUrl = ''
        def testPassed = true
        def version
        def build_no

        load "$HOME/env.groovy"

        try {
            stage('Git & Dependencies') {
                sendSlackNotification('good', BRANCH_NAME + ' build started. ' + env.BUILD_URL)
                gitDependencies()
            }

            stage('Tag Build') {
                buildTag()
            }

            stage('Tests') {
                sh 'lein test-cljs'
            }

            stage('Build') {
                sh 'lein prod-build'
            }

            stage('Build (iOS)') {
                withCredentials([string(credentialsId: 'jenkins_pass', variable: 'password')]) {
                    sh ('plutil -replace CFBundleShortVersionString  -string ' + version + ' ios/StatusIm/Info.plist')
                    sh ('plutil -replace CFBundleVersion  -string ' + build_no + ' ios/StatusIm/Info.plist')
                    sh 'export RCT_NO_LAUNCH_PACKAGER=true && xcodebuild -workspace ios/StatusIm.xcworkspace -scheme StatusIm -configuration release -archivePath status clean archive'
                    sh ('security unlock-keychain -p ' + password + ' login.keychain')
                    sh 'xcodebuild -exportArchive -exportPath status_appstore -archivePath status.xcarchive -exportOptionsPlist ~/archive-release.plist'
                }
            }

            stage('Deploy (iOS)') {
                sh ('bundle exec fastlane ios release')
            }

            stage('Push build tag') {
                pushTag()
            }
        } catch (e) {
            sendSlackNotification('bad', 'Release build failed uploading to iTunes Connect. ' + env.BUILD_URL)
            throw e
        }

        stage('Slack Notification') {
            sendSlackNotification('good', 'Release build ' + version + ' succesfully aploade to iTunes Connect')
        }
    }
}